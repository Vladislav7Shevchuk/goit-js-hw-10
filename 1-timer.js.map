{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst refs = {\n  input: document.querySelector('#datetime-picker'),\n  btnStart: document.querySelector('[data-start]'),\n  days: document.querySelector('[data-days]'),\n  hours: document.querySelector('[data-hours]'),\n  minutes: document.querySelector('[data-minutes]'),\n  seconds: document.querySelector('[data-seconds]'),\n};\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    selectedTime = selectedDates[0];\n\n    if (selectedTime < new Date()) {\n      refs.btnStart.disabled = true;\n      alert('Please choose a date in the future');\n    } else {\n      refs.btnStart.disabled = false;\n    }\n  },\n};\n\nflatpickr(refs.input, options);\n\nrefs.btnStart.disabled = true; // Від початку кнопка неактивна\nlet selectedTime = null;\nlet timerId = null;\n\nrefs.btnStart.addEventListener('click', () => {\n  refs.btnStart.disabled = true;\n  refs.input.disabled = true; // Забороняємо змінювати дату після старту\n\n  timerId = setInterval(() => {\n    const timeLeft = selectedTime - new Date();\n\n    if (timeLeft <= 0) {\n      clearInterval(timerId);\n      refs.input.disabled = false;\n      return;\n    }\n\n    updateTimerUI(convertMs(timeLeft));\n  }, 1000);\n});\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction updateTimerUI({ days, hours, minutes, seconds }) {\n  refs.days.textContent = addLeadingZero(days);\n  refs.hours.textContent = addLeadingZero(hours);\n  refs.minutes.textContent = addLeadingZero(minutes);\n  refs.seconds.textContent = addLeadingZero(seconds);\n}\n\n// refs.btnStart.disabled = true; // Від початку кнопка неактивна\n// let selectedTime = null;\n// let timerId = null;\n\n// flatpickr(refs.input, {\n//   enableTime: true,\n//   time_24hr: true,\n//   defaultDate: new Date(),\n//   minuteIncrement: 1,\n//   onClose(selectedDates) {\n//     selectedTime = selectedDates[0];\n\n//     if (selectedTime < new Date()) {\n//       refs.btnStart.disabled = true;\n//       alert('Please choose a date in the future');\n//     } else {\n//       refs.btnStart.disabled = false;\n//     }\n//   },\n// });\n\n// refs.btnStart.addEventListener('click', () => {\n//   refs.btnStart.disabled = true;\n//   refs.input.disabled = true; // Забороняємо змінювати дату після старту\n\n//   timerId = setInterval(() => {\n//     const timeLeft = selectedTime - new Date();\n\n//     if (timeLeft <= 0) {\n//       clearInterval(timerId);\n//       refs.input.disabled = false;\n//       return;\n//     }\n\n//     updateTimerUI(convertMs(timeLeft));\n//   }, 1000);\n// });\n\n// function convertMs(ms) {\n//   const second = 1000;\n//   const minute = second * 60;\n//   const hour = minute * 60;\n//   const day = hour * 24;\n\n//   return {\n//     days: Math.floor(ms / day),\n//     hours: Math.floor((ms % day) / hour),\n//     minutes: Math.floor((ms % hour) / minute),\n//     seconds: Math.floor((ms % minute) / second),\n//   };\n// }\n\n// function addLeadingZero(value) {\n//   return String(value).padStart(2, '0');\n// }\n\n// function updateTimerUI({ days, hours, minutes, seconds }) {\n//   refs.days.textContent = addLeadingZero(days);\n//   refs.hours.textContent = addLeadingZero(hours);\n//   refs.minutes.textContent = addLeadingZero(minutes);\n//   refs.seconds.textContent = addLeadingZero(seconds);\n// }\n"],"names":["refs","options","selectedDates","selectedTime","flatpickr","timerId","timeLeft","updateTimerUI","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value"],"mappings":"oFAMA,MAAMA,EAAO,CACX,MAAO,SAAS,cAAc,kBAAkB,EAChD,SAAU,SAAS,cAAc,cAAc,EAC/C,KAAM,SAAS,cAAc,aAAa,EAC1C,MAAO,SAAS,cAAc,cAAc,EAC5C,QAAS,SAAS,cAAc,gBAAgB,EAChD,QAAS,SAAS,cAAc,gBAAgB,CAClD,EAEMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBC,EAAeD,EAAc,CAAC,EAE1BC,EAAe,IAAI,MACrBH,EAAK,SAAS,SAAW,GACzB,MAAM,oCAAoC,GAE1CA,EAAK,SAAS,SAAW,EAE5B,CACH,EAEAI,EAAUJ,EAAK,MAAOC,CAAO,EAE7BD,EAAK,SAAS,SAAW,GACzB,IAAIG,EAAe,KACfE,EAAU,KAEdL,EAAK,SAAS,iBAAiB,QAAS,IAAM,CAC5CA,EAAK,SAAS,SAAW,GACzBA,EAAK,MAAM,SAAW,GAEtBK,EAAU,YAAY,IAAM,CAC1B,MAAMC,EAAWH,EAAe,IAAI,KAEpC,GAAIG,GAAY,EAAG,CACjB,cAAcD,CAAO,EACrBL,EAAK,MAAM,SAAW,GACtB,MACD,CAEDO,EAAcC,EAAUF,CAAQ,CAAC,CAClC,EAAE,GAAI,CACT,CAAC,EAED,SAASE,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASR,EAAc,CAAE,KAAAG,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CACxDb,EAAK,KAAK,YAAcc,EAAeJ,CAAI,EAC3CV,EAAK,MAAM,YAAcc,EAAeH,CAAK,EAC7CX,EAAK,QAAQ,YAAcc,EAAeF,CAAO,EACjDZ,EAAK,QAAQ,YAAcc,EAAeD,CAAO,CACnD"}